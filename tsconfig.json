{
  "compilerOptions": {
    "target": "esnext", // 'es3', 'es5', 'es2015', 'es2016', 'es2017','es2018', 'esnext' 가능
    "module": "esnext", //무슨 import 문법 쓸건지 'commonjs', 'amd', 'es2015', 'esnext'
    "allowJs": true, // js 파일들 ts에서 import해서 쓸 수 있는지
    "checkJs": true, // 일반 js 파일에서도 에러체크 여부
    "skipLibCheck": true, // 선언 파일(`*.d.ts`)의 타입 체크를 건너뜁니다.
    "jsx": "preserve", // tsx 파일을 jsx로 어떻게 컴파일할 것인지 'preserve', 'react-native', 'react'
    "declaration": true, //컴파일시 .d.ts 파일도 자동으로 함께생성 (현재쓰는 모든 타입이 정의된 파일)
    "outDir": "./dist", // js 파일의 출력 경로를 dist 폴더로 설정
    "rootDir": "./src", // 소스 파일의 루트 경로를 src 폴더로 설정
    "removeComments": true, //컴파일시 주석제거
    "moduleResolution": "node",
    "strict": true, //strict 관련, noimplicit 어쩌구 관련 모드 전부 켜기
    "noImplicitAny": true, //any타입 금지 여부
    "strictNullChecks": true, //null, undefined 타입에 이상한 짓 할시 에러내기
    "strictFunctionTypes": true, //함수파라미터 타입체크 강하게
    "strictPropertyInitialization": true, //class constructor 작성시 타입체크 강하게
    "noImplicitThis": true, //this 키워드가 any 타입일 경우 에러내기
    "alwaysStrict": true, //자바스크립트 "use strict" 모드 켜기
    "allowSyntheticDefaultImports": true,

    "noImplicitReturns": true, //함수에서 return 빼먹으면 에러내기
    "noFallthroughCasesInSwitch": true, //switch문 이상하면 에러내기

    "baseUrl": ".",
    "paths": {
      "src/*": ["src/*"] // src를 명시적으로 매핑
    }
  },
  "include": ["src/**/*", "src/types/**/*.d.ts"],
  "exclude": ["node_modules", "dist"]
}
